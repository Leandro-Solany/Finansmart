version: '3.8'

services:
  # Aplicação Finansmart
  finansmart-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finansmart-app
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DatabaseConnection=${ORACLE_CONNECTION_STRING}
    depends_on:
      - oracle-db
    networks:
      - finansmart-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Oracle Database
  oracle-db:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    container_name: finansmart-oracle-db
    ports:
      - "1521:1521"
      - "5500:5500"
    environment:
      - ORACLE_PWD=${ORACLE_PASSWORD:-OraclePassword123}
      - ORACLE_CHARACTERSET=AL32UTF8
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - finansmart-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/${ORACLE_PASSWORD:-OraclePassword123}@//localhost:1521/XE as sysdba", "@healthcheck.sql"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx Reverse Proxy (Opcional)
  nginx:
    image: nginx:alpine
    container_name: finansmart-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - finansmart-app
    networks:
      - finansmart-network
    restart: unless-stopped

  # Portainer (Gerenciamento de Containers - Opcional)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: finansmart-portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - finansmart-network
    restart: unless-stopped

networks:
  finansmart-network:
    driver: bridge

volumes:
  oracle-data:
    driver: local
  portainer-data:
    driver: local
